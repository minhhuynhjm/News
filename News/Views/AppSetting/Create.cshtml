@model News.Models.AppSettingViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<div class="panel panel-flat">
    <div class="panel-heading">
        <h5 class="panel-title">AppSetting</h5>
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a data-action="collapse"></a></li>
                <li><a data-action="reload"></a></li>
                <li><a data-action="close"></a></li>
            </ul>
        </div>
    </div>

    <div class="panel-body">
        <p class="content-group-lg">
            This section allows you to set basic information related to the application such as:<code>name</code>, <code>company</code>, <code>email</code>, <code>logo</code>....
        </p>

        <form class="form-horizontal" method="post" enctype="multipart/form-data" name="fAdd" id="fAdd">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Logo)
            <fieldset class="content-group">
                <div class="form-group">
                    <label class="control-label col-lg-2">Name</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Description</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Logo</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                    </div>
                </div>
                @if (Model != null)
                {
                <div class="form-group">
                    <label class="control-label col-lg-2">Logo upload</label>
                    <div class="col-lg-10">
                        <div class="card-img-actions">
                            <a class="fancy-photo"
                               rel="group"
                               href="@Url.Content(Model.Logo)">
                                <img src="@Url.Content(Model.Logo)" class="img-fluid img-preview rounded" alt="">
                            </a>
                            <span class="card-img"></span>
                        </div>
                    </div>
                </div>
                }
                <div class="form-group">
                    <label class="control-label col-lg-2">Company</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Address</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Phone</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Email</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Website</label>
                    <div class="col-lg-10">
                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>

            <div class="text-right">
                <button type="submit" class="btn btn-lg btn-success" id="btnSubmit">Submit</button>
            </div>
        </form>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $('#btnSubmit').click(function (e) {
        if ($("#fAdd").valid()) {
            e.preventDefault();
            var form = $('#fAdd');
            var formAction = "/AppSetting/Create";
            var fdata = new FormData(form.get(0));

            $.ajax({
                type: 'POST',
                url: formAction,
                data: fdata,
                processData: false,
                contentType: false,
                async: true
            }).done(function (result) {
                // do something with the result now
                if (result.success) {
                    swal({
                        title: 'Save success!',
                        text: '',
                        type: 'success',
                        showCloseButton: true,
                        confirmButtonClass: 'btn btn-primary',
                        cancelButtonClass: 'btn btn-light'
                    }).then(function () {
                        window.location = '@Url.Action("Create", "AppSetting")';
                    }).catch(swal.noop);
                }
                else {
                    swal({
                        title: 'An error occurred, please try again later!',
                        text: '',
                        type: 'error',
                        padding: 30,
                        showCloseButton: true,
                        cancelButtonClass: 'btn btn-light',
                        confirmButtonClass: 'btn btn-primary',
                    });
                }
            }).fail(function () {
                console.log("Error!");
            });
        }
        else {
            return false;
        }
    });
</script>