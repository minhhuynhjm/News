@model News.Models.CategoryViewModel
@section head{
    @Styles.Render("~/Content/Site.css")
    @Styles.Render("~/Content/Tree.css")
}
@section scripts{
    @Scripts.Render("~/Scripts/tree.js")
    @Scripts.Render("~/bundles/jqueryval")
}
@{
    var parent = (int?)ViewBag.Parent;
    var parentCategoryName = (string)ViewBag.ParentCategoryName;
    string site_key = News.Common.Captcha.GoogleRecaptchaSiteKey_v2;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @TempData["InvalidCaptcha"];
    <div class="panel panel-primary">
        <div class="panel-heading panel-head">Categories</div>
        <div id="frm-author" class="panel-body">
            <div class="modal-header">
                <h3 class="modal-title">Add Category</h3>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.Label("Category Parent", new { @class = "control-label col-sm-3" })
                        <div class="col-sm-9">
                            @Html.TextBox("CategoryParent", parentCategoryName, new { @class = "form-control", @disabled = "disabled", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CategoryName, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.CategoryName, new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.CategoryName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Decription, new { @class = "control-label col-sm-3" })
                        <div class="col-sm-9">
                            @Html.TextBoxFor(m => m.Decription, new { @class = "form-control ", required = "required" })
                            @Html.ValidationMessageFor(m => m.Decription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(m => m.Parent, new { Value = parent })
                @Html.HiddenFor(m => m.CategoryId)
                @Html.ValidationMessage("Parent")
            </div>
            <div class="g-recaptcha" data-sitekey="@site_key"></div>
            <div class="modal-footer">
                <input type="submit" value="Add" class="btn btn-success" />
                @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}
<script src="https://www.google.com/recaptcha/api.js" async defer></script>
